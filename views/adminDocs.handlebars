<div id="modal" class="reveal" data-reveal>
  <form id="documentform" action="/api/documents/:rowid" method="POST">
    <input type="hidden" name="_method" value="PUT" />

      <fieldset>
        <legend>Published:</legend>
        <input id="published-false" type="radio" class="mdl-radio__button" name="published" value="0">
        <label for="published-false">False</label>
        <input id="published-true" type="radio" class="mdl-radio__button" name="published" value="1">
        <label for="published-true">True</label>
      </fieldset>
      <label>Language
        <select id="lang" name="lang" aria-describedby="languageHelpText" required>
          <option selected disabled hidden style="display:none;" value="">{{text.share.languagePrompt}}</option>
          <option value="en">English</option>
          <option value="es">Español</option>
          <option value="fr">Français</option>
          <option value="pt">Português</option>
        </select>
      </label>
      <input type="hidden" id="language" name="language" value="" />
      <label>Title:
        <input id="title" type="text" name="title" placeholder="..." value="null" required>
      </label>
      <label>Type:
        <fieldset>
          <input type="radio" name="type" value="VCA" id="VCA" required><label for="VCA">VCA</label>
          <input type="radio" name="type" value="POA" id="POA"><label for="POA">POA</label>
          <input type="radio" name="type" value="VCA/POA" id="VCA/POA"><label for="VCA/POA">VCA/POA</label>
        </fieldset>
      </label>
      <label> Description in document language - should be <span id="selectedLanguage"></span>
        <textarea id="descriptionlocal" type="text" name="descriptionlocal" placeholder="..." rows= "2" required></textarea>
      </label>
      <label id="descriptionen-input"> Description in English (if document language is not English)
        <textarea id="descriptionen" type="text" name="descriptionen" placeholder="..." rows= "2"></textarea>
      </label>
      <label>Country:
        <select id="iso3" name="iso3" required>
        </select>
      </label>
      <input type="hidden" id="country" name="country" value="" />
      <label>Community:
        <select id="community" name="community" required>
          <option selected disabled hidden style="display:none;" value="_error">Select a community</option>
        </select>
        <input id="community_new" type="text" name="community_new" placeholder="..." disabled required>
      </label>
      <label>Year:
        <select id="year" name="year" required>
          <option selected disabled hidden style="display: none" value="">Select year VCA was completed...</option>
          <option value="2017">2017</option><option value="2016">2016</option><option value="2015">2015</option><option value="2014">2014</option><option value="2013">2013</option><option value="2012">2012</option><option value="2011">2011</option><option value="2010">2010</option><option value="2009">2009</option><option value="2008">2008</option><option value="2007">2007</option><option value="2006">2006</option><option value="2005">2005</option><option value="2004">2004</option><option value="2003">2003</option><option value="2002">2002</option><option value="2001">2001</option><option value="2000">2000</option><option value="1999">1999</option><option value="1998">1998</option><option value="1997">1997</option><option value="1996">1996</option><option value="1995">1995</option><option value="1994">1994</option><option value="1993">1993</option><option value="1992">1992</option><option value="1991">1991</option><option value="1990">1990</option><option value="1989">1989</option><option value="1988">1988</option>
        </select>
      </label>
      <label>Latitude:
        <input id="lat" type="number" step="any">
      </label>
      <label>Longtitude:
        <input id="lng" type="number" step="any">
      </label>
      <div id="filename">File name: <span></span></div>
      <div id="size">File size: <span></span></div>
      <button type="submit" value="submit" class="button primary form-actions__submit">
        <i class="fa fa-check" aria-hidden="true"></i> Submit
      </button>
      <button id="modal__close" class="button secondary" data-close>
        <i class="fa fa-ban" aria-hidden="true"></i> Cancel
      </button>
  </form>

  <form id="deleteform" action="/api/documents/:rowid" method="POST">
      <input type="hidden" name="_method" value="DELETE" />
      <button type="submit" value="submit" class="button alert">
        <i class="fa fa-trash-o" aria-hidden="true"></i> Delete Document</button>

    </form>

</div>


<div class="row expanded">
  <div class="column">
  <div id="loading"><i class="fa fa-spinner fa-spin form-actions__spinner" style="font-size:48px;"></i></div>
  <div id="nodata">no documents</div>
  <div id="table-div">

  </div>

  <hr>
  {{#if error}}
    <p><strong>FLASH!</strong> {{ error }}</p>
  {{/if}}
  {{#if success}}
    <p><strong>FLASH!</strong> {{ success }}</p>
  {{/if}}

  </div>
</div>


<script>

var formatBytes = function(bytes, decimals) {
   if(bytes == 0) return '0 Bytes';
   var k = 1000,
       dm = decimals + 1 || 3,
       sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
       i = Math.floor(Math.log(bytes) / Math.log(k));
   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
}


function editRow(rowid) {
  $.get('/api/documents/' + rowid, function(response) {
    var action = $("#documentform").attr("action").replace(":rowid", rowid);
    $("#documentform").attr("action", action);
    var action = $("#deleteform").attr("action").replace(":rowid", rowid);
    $("#deleteform").attr("action", action);
    if(response.published === 1) {
      $("#published-true").click();
    } else {
      $("#published-false").click();
    }
    $("#title").val(response.title);
    $("input[name='type']").prop('checked', false);
    var typeStr = "input[name='type'][value='" + response.type + "']";
    $(typeStr).prop('checked', true);
    $("#lang").find('option[value=' + response.lang + ']').attr('selected','selected');
    $("#language").val(response.language);
    $("#selectedLanguage").text(response.language);
    $("#descriptionen").val(response.descriptionen);
    $("#descriptionlocal").val(response.descriptionlocal);
    $("#country").val(response.country);
    $("#iso3").find('option[value=' + response.iso3 + ']').attr('selected','selected');
    $("#community").find('option[value="' + response.community + '"]').attr('selected','selected');
    $("#year").find('option').attr('selected',null);
    $("#year").find('option[value=' + response.year + ']').attr('selected','selected');
    $("#filename").find('span').text(response.filename);
    $("#size").find('span').text(formatBytes(response.bytes, 1));
    $("#lat").val(response.lat);
    $("#lng").val(response.lng);
    getCommunities(function(){
      $("#community").find('option[value="' + response.community + '"]').attr('selected','selected');
    });
    $('#modal').foundation('open');
  });
}
// $("#community").find('option[value="Damissakoro, Siguiri, Kankan"]')

function sizeSlider(){
  var view = $(".dataTables_scrollBody").width(); // screen window width
  var full = $("#dataTable").width(); // full width
  // hide slider if there is no overflow
  if(view >= full){ $(slider).hide(); } else { $(slider).show(); }
  var viewMin = $(".dataTables_scrollBody").scrollLeft();
  var viewMax = viewMin + view;
  slider.noUiSlider.updateOptions({
    start: [viewMin, viewMax],
    range: {
      'min': 0,
      'max': full
    }
  });
}

function getCommunities(cb){
  $("#community").find(".community_options").remove();
  var url = "/api/communities/" + $("#iso3").find(":selected").val();
  console.log(url)
  $.get(url, function(data) {
    for(var i=0, len=data.length; i<len; i++) {
      var html = '<option class="community_options" value="' + data[i].community + '">' + data[i].community + '</option>';
      $("#community").append(html);
    }
    $("#community").append('<option class="community_options" value="_new">Add a new community</option>');
    if(cb){ cb() };
  });
}

window.onload = function() {

  $("#iso3").on('change', function() {
    $("#country").val( $("#iso3").find(":selected").text() );
    getCommunities(function(){
      $("#community").val('_error');
      $("#community_new").val('').prop("disabled", true);
    });
  })
  $("#lang").on('change', function() {
    var languageName = $("#lang option:selected").text();
    $("#language").val(languageName);
    $("#selectedLanguage").text(languageName);
  })
  $("#community").on('change', function() {
    if($("#community").val() === '_new'){
      $("#community_new").prop("disabled", false);
    } else {
      $("#community_new").val('').prop("disabled", true);
    }
  })

  resize = $(window).resize(function() {
    sizeSlider();
  });

  $("#loading").show();

  $.get("/api/countries", function(data) {
    for(var i=0, len=data.length; i<len; i++) {
      // var country = data[i]["en"];
      var html = '<option value="' + data[i].iso3 + '">' + data[i].en + '</option>';
      $("#iso3").append(html);
    }
  });

  $("#modal__close").click(function(e) {
      e.preventDefault();
  });

  $(window).on(
    'closed.zf.reveal', function() {
      console.log("'closeAll.zf.Reveal' fired.");
    }
  );

  $.get('/api/documents', function(response) {
    for(var i = 0; i < response.length; i++){
      var trimfields = ["community", "title", "descriptionlocal", "descriptionen", "comments"];
      trimfields.forEach(function(d){
          if(response[i][d].length > 20){
            response[i][d] = response[i][d].substring(0, 20);
            response[i][d] += "...";
          }
      })
    }

    $("#table-div").empty();
    if(response.length === 0) {
      $("#loading").hide();
      $("#nodata").show();
      return false;
    }
    // render headers
    $("#table-div").html('<table data-sortable id="dataTable" class="compact nowrap stripe cell-border" cellspacing="0"><thead><tr></tr></thead><tbody></tbody></table>');
    var header = response[0];
    $("#dataTable thead tr").append("<th></th>")
    for (field in header) {
      // if(field !== "rowid"){
        $("#dataTable thead tr").append('<th>' + field + ' <br><input class="column-search" type="search" placeholder="search..." /></th>');
      // }
    }
    // render body of table
    var tbody = $("#dataTable tbody")[0];
    for (var i = 0; i < response.length; i++) {
        var tr = document.createElement("tr");
        var editRow = document.createElement("td");
        var editBtnHtml = '<i onClick="editRow(' + response[i].rowid + ');" class="fa fa-pencil-square-o table-row__edit-btn" aria-label="edit document metadata"></i>';
        $(editRow).html(editBtnHtml);
        tr.appendChild(editRow);
        for (field in response[i]) {
          // if(field !== "rowid"){
            var td = document.createElement("td");
            var cell = response[i][field];
            if(field === "published" && cell === 0) { cell = "no"; }
            if(field === "published" && cell === 1) { cell = "yes"; }
            $(td)
                .html(cell)
                .attr("title", response[i][field]);
            tr.appendChild(td);
          // }
        }
        tbody.appendChild(tr);
    }
    // initialize dataTable
    table = $('#dataTable').DataTable({
      scrollX: true,
      "sDom":'lrtip',
      "lengthChange": false,
      "pageLength": 10,
      // "lengthMenu": [ 10, 50, 100 ],
      "language": {
        "lengthMenu": "Display _MENU_ records",
        "info": "Showing _START_ to _END_ of _TOTAL_ records",
      },
      // first column is the edit button, so disable sort
      "columnDefs": [
        { "orderable": false, "targets": 0 }
      ]
    });

    $("#loading").hide();

    // stop a click in the search input box from triggering a sort on the column
    $('.column-search').on('click', function(e){
      e.stopPropagation();
    });

    // initialize column search functionality
    table.columns().every( function() {
      var that = this;
      $('input', this.header() ).on('keyup change', function(){
        if( that.search() !== this.value ){
          that
          .search( this.value )
          .draw();
        }
      });
    });

    // if too few columns the body columns center while the header rows stay left
    // if that's the case, shrink the table wrapper
    if($('#table-div thead').width() < $("#table-div").width()){
      $("#table-div").width($('#table-div thead').width())
    }

    // need a custom scroll bar that is always visible
    // so user can x-scroll the table even if they only have a mouse (i.e. no touchpad)
    $("<div id='myslider'></div>").insertAfter(".dataTables_scroll")
    slider = document.getElementById('myslider');
    noUiSlider.create(slider, {
    	start: [null, null],
    	connect: true,
      behaviour: "drag-fixed",
    	range: {
    		'min': 0,
    		'max': 1
    	}
    });


    sizeSlider();

    // update the slider position when the div is scrolled via direct interaction
    var divScroll = function(){
      var viewMin = $(".dataTables_scrollBody").scrollLeft();
      var view = $(".dataTables_scrollBody").width(); // visible width
      var viewMax = viewMin + view;
      slider.noUiSlider.set([viewMin, viewMax]);
    }
    $(".dataTables_scrollBody").on('scroll', divScroll);
    // update the table view when the slider is dragged
    slider.noUiSlider.on('slide', function(values, handle, unencoded){
      $(".dataTables_scrollBody").off('scroll', divScroll) // turn off the direct interaction scroll listener to keep things smooth
      $(".dataTables_scrollBody").scrollLeft(Math.round(unencoded[0])) // move the view based on the new slider position
      $(".dataTables_scrollBody").css("overflow-x", "hidden") // prevent the browser scrollbar from showing
    });
    slider.noUiSlider.on('end', function(){
      $(".dataTables_scrollBody").on('scroll', divScroll); // after done dragging the slider turn back on the direct interaction scroll listener
      $(".dataTables_scrollBody").css("overflow-x", "auto"); // turn back on the browser scroll styling
    })

  });
}

</script>
